{"version":3,"sources":["cue_list/core.cljs"],"mappings":"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","names":["cue-list.core/pdfjs","cue_list.core.goog$module$goog$object.get","js/window","js/cue-list","js/cue-list.core","js/cue-list.core.state","cue-list.core/state","reagent.core.atom","js/cue-list.core.APP","cue-list.core/APP","com.fulcrologic.fulcro.application.fulcro_app","options__26400__auto__","com.fulcrologic.fulcro.components/wrapped-render","com.fulcrologic.fulcro.components/props","js/cue-list.core.Sample","com.fulcrologic.fulcro.components/react-constructor","cljs.core.get","com.fulcrologic.fulcro.components/configure-component!","cue-list.core/Sample","this","props","com.fulcrologic.fulcro.dom.macro_create_element","cue-list.core/dom-point-vec","point","cue-list.core/viewport-point-to-doc-point","v-point","viewport","trans-mat","js/DOMMatrix","js/DOMPoint","cljs.core.nth","cue-list.core/doc-point-to-view-point","doc-point","cue-list.core/cue-flag-points","origin","cljs.core/first","cljs.core/second","cue-list.core/on-canvas-click","event","rect","vp-x","vp-y","js/Window","last-cue","or__5045__auto__","cljs.core/last","cljs.core.sort_by","cljs.core/deref","new-cue","cljs.core.swap_BANG_","cljs.core/assoc","cljs.core.conj","cue-list.core/sorted-cues","cues","p1__33523#","p1__33524#","cljs.core/reverse","cue-list.core/render-cue-flags","context","seq__33526","cljs.core/seq","chunk__33527","count__33528","i__33529","temp__5804__auto__","cljs.core/chunked-seq?","c__5568__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/next","cue","p1__33525#","cljs.core.filter","cljs.core._EQ_","flag-points","selected","cue-list.core/update-doc-dims","width","height","p__33530","map__33531","cljs.core/--destructure-map","cue-list.core/pdf-canvas","url","state","canvas-ref","js/module$node_modules$react$index.useRef","js/module$node_modules$react$index.useEffect","pdf","page","canvas","render-context","js/console.log","p__33532","map__33533","cue-list.core/cue-overlay","doc-canvas","js/document","cue-list.core/dec-page","p1__33534#","cljs.core.update","cljs.core/dec","cue-list.core/inc-page","p1__33535#","cljs.core/inc","cue-list.core/dec-zoom","p1__33536#","i","cue-list.core/inc-zoom","p1__33537#","cue-list.core/rotate-clockwise","p1__33538#","cljs.core/mod","cue-list.core/rotate-counterclockwise","p1__33539#","cue-list.core/on-cue-click","cue-list.core/remove-cue","cljs.core/vec","p1__33540#","cljs.core.not_EQ_","cue-list.core/update-cue-field","kw","val","idx","cljs.core.assoc","cue-list.core/cue-button-li","p1__33541#","p1__33542#","p1__33543#","p1__33544#","G__33546","fexpr__33545","e","goog.string/format","cue-list.core/ui","iter__5523__auto__","s__33548","cljs.core/LazySeq","c__5521__auto__","size__5522__auto__","b__33550","cljs.core/chunk-buffer","i__33549","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__33547","cljs.core/cons","cljs.core/rest","cue-list.core/stop","cue-list.core/start","reagent.dom.render","js/document.querySelector","cue-list.core/init"],"sourcesContent":["(ns cue-list.core\n  (:require\n   [goog.object :as gobj]\n   [goog.string :as gstring]\n    goog.string.format\n   [\"react\" :as react]\n   [reagent.core :as reagent]\n   [reagent.dom :as rdom]\n   [com.fulcrologic.fulcro.application :as app]\n   [com.fulcrologic.fulcro.dom :as dom]\n   [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n   )\n)\n\n(def ^js pdfjs (gobj/get js/window \"pdfjs-dist/build/pdf\"))\n\n\n\n\n;; TODO: create spec/schema for cue map\n;; CUE\n;; - :position  - not editable\n;; - :cue-number - editable, auto increment\n;; - :description - editable\n;; - :action - editable\n;;\n;; TODO: should cues be { \"cue-number\" { info map } }?\n\n\n;; TODO: spec out state, cues\n;;\n(defonce state (reagent/atom {:page 16\n                              :zoom 1\n                              :selected-cue-idx nil\n                              :rotate 0\n                              :cues []}))\n\n;;;; FULCRO ;;;;\n(defonce APP (app/fulcro-app))\n\n(defsc Sample [this props]\n  {}\n  (dom/div (str props)))\n\n(comment\n  (reset! (::app/state-atom APP) {:page 16\n                                  :zoom 1\n                                  :selected-cue-idx nil\n                                  :rotate 0\n                                  :cues []})\n  (app/mount! APP Sample \"fulcro-app\")\n  (app/schedule-render! APP)\n  )\n\n\n\n(comment\n\n  (reset! state {:page 16\n          :zoom 1\n          :selected-cue-idx nil\n          :rotate 0\n          :cues []})\n  (swap! state assoc :cues '[])\n  (swap! state assoc :page 16)\n  @state\n  )\n\n\n(defn dom-point-vec [point]\n  [(.-x point) (.-y point)])\n\n(defn viewport-point-to-doc-point [v-point viewport]\n  (let [trans-mat (.-transform viewport)]\n    (dom-point-vec (.transformPoint (.inverse (js/DOMMatrix. (.-transform viewport)))\n                                    (js/DOMPoint. (nth v-point 0) (nth v-point 1))))))\n\n(defn doc-point-to-view-point [doc-point viewport]\n  (dom-point-vec (.transformPoint (js/DOMMatrix. (.-transform viewport))\n                                  (js/DOMPoint. (nth doc-point 0) (nth doc-point 1)))))\n\n(defn cue-flag-points [origin]\n  [\n   origin\n   [(- (first origin) 10) (- (second origin) 10)]\n   [(- (first origin) 50) (- (second origin) 10)]\n   [(- (first origin) 50) (+ (second origin) 10)]\n   [(- (first origin) 10) (+ (second origin) 10)]\n   ]\n  )\n\n(comment\n  (swap! state assoc :cues '[])\n  (.inverse (js/DOMMatrix. (.-transform (.-viewport js/Window))))\n  (.-height (.-viewport js/Window))\n  (.-width (.-viewport js/Window))\n  (first (viewport-point-to-doc-point [0 0] (.-viewport js/Window)))\n  (last (viewport-point-to-doc-point [0 0] (.-viewport js/Window)))\n  )\n\n\n(defn on-canvas-click [event]\n  ;; translat page coordinate to doc coordinate\n  (let [rect (.getBoundingClientRect event.target)\n        vp-x (- (.-pageX event) (.-left rect))\n        vp-y (- (- (.-pageY event) (.-top rect)) (.-scrollY js/window))\n        doc-point (viewport-point-to-doc-point [vp-x vp-y] (.-viewport js/Window))\n        ;; TODO: increment cue number by finding cue number of closest position\n        last-cue (or (:cue-number (last (sort-by :cue-number (:cues @state)))) 0)\n        new-cue {:cue-number (+ 1 last-cue)\n                 :page (:page @state)\n                 :point doc-point\n                 :description \"\"\n                 :action \"\"}]\n    (swap! state assoc :cues (conj (:cues @state) new-cue))\n    (swap! state assoc :selected-cue-idx (.indexOf (:cues @state) new-cue))\n    ))\n\n(comment\n  (swap! state assoc :cues '[])\n  (.indexOf (:cues @state) (second (:cues @state)))\n  )\n\n(defn sorted-cues [cues]\n  (->>\n   cues\n   (sort-by #(first (:point %)))\n   (sort-by #(second (:point %)))\n   reverse\n   (sort-by :page)))\n\n\n(defn render-cue-flags [context viewport]\n  ;; (js/console.log (.keys js/Object viewport))\n\n    ;; rotate render context\n  (doseq [cue (filter #(= (:page %) (:page @state)) (:cues @state))]\n    (let [flag-points (cue-flag-points (doc-point-to-view-point (:point cue) viewport))\n          selected (= (:selected-cue-idx @state) (.indexOf (:cues @state) cue))\n          ]\n      (if selected\n        (set! (. context -fillStyle) \"rgba(204, 255, 110, 0.5)\")\n        (set! (. context -fillStyle) \"rgba(244, 231, 34, 0.5)\"))\n      (.beginPath context)\n      ;; draw cue\n      (.moveTo context\n               (first  (nth flag-points 0))\n               (second (nth flag-points 0)))\n      (.lineTo context\n               (first  (nth flag-points 1))\n               (second (nth flag-points 1)))\n      (.lineTo context\n               (first  (nth flag-points 2))\n               (second (nth flag-points 2)))\n      (.lineTo context\n               (first  (nth flag-points 3))\n               (second (nth flag-points 3)))\n      (.lineTo context\n               (first  (nth flag-points 4))\n               (second (nth flag-points 4)))\n      (.fill context)\n      (set! (. context -fillStyle) (if selected\n                                     \"rgba(0, 0, 0, 1)\"\n                                     \"rgba(0, 0, 0, 0.2)\"))\n      (set! (. context -font) \"25px sans-serif\")\n      (.fillText context (:cue-number cue)\n                 (first  (nth flag-points 3))\n                 (second (nth flag-points 3)))\n      )))\n\n(comment\n  (swap! state assoc :cues '[])\n  @state\n  )\n\n(defn update-doc-dims [width height]\n  (swap! state assoc :doc-dims [width height])\n  )\n\n(defn pdf-canvas [{:keys [url state]}]\n  ;; ref\n  (let [canvas-ref (react/useRef nil)]\n    ;; initialize and attach pdfjs when the canvas is mounted\n    (react/useEffect\n     (fn []\n       (do\n         (-> (.getDocument pdfjs url)\n             (.-promise)\n             (.then (fn [^js pdf] (.getPage pdf (:page state))))\n             (.then (fn [^js page]\n                      (let [viewport (.getViewport page #js {:scale (:zoom state)\n                                                             :rotation (:rotate state)})\n                            canvas (.-current canvas-ref)\n                            context (.getContext canvas \"2d\")\n                            render-context\n                            #js {:canvasContext context\n                                 :viewport viewport}]\n                        (set! canvas -height (.-height viewport))\n                        (update-doc-dims (.-width viewport) (.-height viewport))\n                        (set! canvas -width (.-width viewport))\n                        (set! (. js/Window -viewport) viewport) ;; TODO: set on state?\n                        (-> (.render page render-context)\n                            (.-promise)\n                            (.then (fn [] (js/console.log \"PDF Page rendered.\"))))\n                        )))))\n       (fn []\n         ;; not sure if there is supposed to be any cleanup for the pdfjs objects\n         ;; might need to store those somewhere and dispose of them properly here\n         ;; (js/console.log \"cleanup\")\n         ))\n     ;; ensure this only re-runs when url or nav changes\n     #js [url (:page state) (:zoom state) (:rotate state)])\n    [:canvas {:ref canvas-ref\n              :id \"document-canvas\"\n              :style {:z-index 0\n                      :position \"absolute\"}}])\n  )\n\n(defn cue-overlay [{:keys [state]}]\n  (let [canvas-ref (react/useRef nil)\n        viewport (.-viewport js/Window)\n        doc-canvas (.getElementById js/document \"document-canvas\")\n        ]\n    (react/useEffect\n     (fn []\n       (do\n         (let [\n               canvas (.-current canvas-ref)\n               context (.getContext canvas \"2d\")\n               ]\n           (do\n             (.reset context)\n             (.addEventListener canvas \"click\" on-canvas-click)\n             ;; (.reset canvas)\n             (render-cue-flags context viewport))\n           ))\n       (fn [] )) ;; (js/console.log \"cleanup\"))\n     #js [state])\n    [:canvas {:ref canvas-ref\n              :id \"overlay-canvas\"\n              :width (first (:doc-dims state))\n              :height (second (:doc-dims state))\n              :style {:position \"absolute\" :z-index 1}}])\n  )\n\n(comment\n  (js/console.log (.-viewport js/Window))\n  (.-x (.getBoundingClientRect (.getElementById js/document \"document-canvas\")))\n  (.-y (.getBoundingClientRect (.getElementById js/document \"document-canvas\")))\n  )\n\n;; UI ACTIONS\n(defn dec-page []\n  (swap! state #(update % :page dec)))\n(defn inc-page []\n  (swap! state #(update % :page inc)))\n(defn dec-zoom []\n  (swap! state #(update % :zoom (fn [i] (- i 0.25)))))\n(defn inc-zoom []\n  (swap! state #(update % :zoom (fn [i] (+ i 0.25)))))\n(defn rotate-clockwise []\n  (swap! state #(update % :rotate (fn [i] (mod (+ i 90) 360)))))\n(defn rotate-counterclockwise []\n  (swap! state #(update % :rotate (fn [i] (mod (- i 90) 360)))))\n(defn on-cue-click [cue]\n  ;; TODO: one swap\n  (swap! state assoc :page (:page cue))\n  (swap! state assoc :selected-cue-idx (.indexOf (:cues @state) cue)))\n(defn remove-cue [cue]\n  (if (= (.indexOf (:cues @state) cue) (:selected-cue-idx @state))\n    (swap! state assoc :selected-cue-idx nil)\n    )\n  (swap! state assoc :cues (vec (filter #(not= (:cue-number cue) (:cue-number %)) (:cues @state))))\n  )\n\n(comment\n  (swap! state assoc :cues '[])\n  @state\n  (:selected-cue-idx @state)\n  )\n\n(defn update-cue-field [cue kw val]\n  (let [idx (.indexOf (:cues @state) cue)]\n    (swap! state assoc :cues\n           (assoc (:cues @state) idx (assoc (nth (:cues @state) idx) kw val)))))\n(comment\n  @state\n  (update-cue-field (first (:cues @state)) :description \"test\")\n  (first (:cues @state))\n  (:selected-cue-idx @state)\n  )\n\n\n\n(defn cue-button-li [cue]\n  (if (= (.indexOf (:cues @state) cue) (:selected-cue-idx @state))\n    [:li {:style {:list-style-type \"none\"\n                  :border-style \"inset\"}}\n     [:form\n      ;; TODO on submit form, update state\n      {:on-submit #((.preventDefault %)\n                    (swap! state assoc :selected-cue-idx nil))}\n      ;;\n      [:label {:for \"cue-number\"} \"Cue Number\"]\n      [:input {:type \"text\"\n               :id \"cue-number\"\n               :name \"cue-number\"\n               :value (:cue-number cue)\n               :on-change #(update-cue-field cue :cue-number (-> % .-target .-value))}] [:label {:for \"action\"} \"Action\"]\n      [:input {:type \"text\"\n               :id \"action\"\n               :name \"action\"\n               :value (:action cue)\n               :on-change #(update-cue-field cue :action (-> % .-target .-value))\n               }]\n      [:label {:for \"description\"} \"Description\"]\n      [:input {:type \"text\"\n               :id \"description\"\n               :name \"description\"\n               :value (:description cue)\n               :on-change #(update-cue-field cue :description (-> % .-target .-value))\n               }]\n      [:input {:type \"submit\" :hidden true}]]\n     [:input {:type \"button\"\n              :on-click (fn [e] (remove-cue cue))\n              :value \"Delete Cue\"}\n      ]]\n    ;; display state\n    [:li {:style {:list-style-type \"none\"\n                  :border-style \"none\"\n                  }}\n     [:input {:type \"button\"\n              :on-click (fn [e] (on-cue-click cue))\n              :value (gstring/format \"cue: %s page: %s action: %s description: %s\"\n                                     (:cue-number cue)\n                                     (:page cue)\n                                     (:action cue)\n                                     (:description cue))}]\n     [:input {:type \"button\"\n              :on-click (fn [e] (remove-cue cue))\n              :value \"x\"}\n      ]]))\n\n;; APP\n(defn ui []\n  [:div [:h1 \"Script Cue Annotator\"]\n   [:div {:id \"nav\" :style {:display \"flex\" :align-items \"flex-start\" :column-gap \"20px\"}}\n    [:div {:style {:display \"flex\" :align-items \"flex-start\" :column-gap \"5px\"}}\n     [:input {:type \"button\" :value (gstring/format \"< %s\" (dec (:page @state)))  :on-click dec-page}]\n     [:input {:type \"button\" :value (gstring/format \"> %s\" (inc (:page @state))) :on-click inc-page}]\n     [:div \"page: \" (:page @state)]]\n    [:div {:style {:display \"flex\" :align-items \"flex-start\" :column-gap \"5px\"}}\n     [:input {:type \"button\" :value \"-\" :on-click dec-zoom}]\n     [:input {:type \"button\" :value \"+\" :on-click inc-zoom}]\n     (gstring/format \"zoom: %s\" (:zoom @state))]\n    [:div {:style {:display \"flex\" :align-items \"flex-start\" :column-gap \"5px\"}}\n     \"rotate: \"\n     [:input {:type \"button\" :value \"\u21ba\" :on-click rotate-counterclockwise}]\n     [:input {:type \"button\" :value \"\u21bb\" :on-click rotate-clockwise}]\n     [:div \"rotation: \" (:rotate @state)]]]\n   [:div {:style {:display \"flex\" :align-items \"flex-start\"}}\n    [:div {:id \"canvas-container\" :style {:position \"relative\"\n                                          :flex-shrink 0\n                                          :width (first (:doc-dims @state))\n                                          :height (second (:doc-dims @state))}}\n     [:f> cue-overlay {:state @state}]\n     [:f> pdf-canvas {:url \"test.pdf\" :state @state}] ;; TODO: only view the ux/nav state of\n     ]\n    [:div \"cues\"\n     [:ul (for [cue (sorted-cues (:cues @state))]\n            ^{:key (.indexOf (:cues @state) cue)} [cue-button-li cue])]]]])\n\n(defn ^:dev/before-load stop []\n  (js/console.log \"stop\"))\n\n(defn ^:dev/after-load start []\n  (rdom/render [ui] (js/document.querySelector \"#app\"))\n  )\n\n\n(defn init []\n  (js/console.log \"starting\")\n  ;; need to tell the lib where to load the worker from, also using same CDN\n  (set! (.. pdfjs -GlobalWorkerOptions -workerSrc) \"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.16.105/pdf.worker.min.js\")\n  (start))\n"]}